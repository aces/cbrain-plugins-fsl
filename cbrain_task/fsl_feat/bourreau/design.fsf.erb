<%
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
%>

<%# Can only be used with FSL 4.1.9 %>
# FEAT version number
set fmri(version) 5.98

<%# Used for FEAT so inmelodic == 0 %>
# Are we in MELODIC?
set fmri(inmelodic) 0

<%# For now, only supports the First-level analysis %>
# Analysis level
# 1 : First-level analysis
# 2 : Higher-level analysis
set fmri(level) <%= params[:level] %>

<%# For now, only supports Pre-Stats %>
# Which stages to run
# 0 : No first-level analysis (registration and/or group stats only)
# 7 : Full first-level analysis
# 1 : Pre-Stats
# 3 : Pre-Stats + Stats
# 2 :             Stats
# 6 :             Stats + Post-stats
# 4 :                     Post-stats
set fmri(analysis) <%= params[:analysis] %>

<%# Always false in CBRAIN %>
# Use relative filenames
set fmri(relative_yn) 0

<%# Never used in CBRAIN %>
# Balloon help
set fmri(help_yn) 0

<%# Never used in CBRAIN %>
# Run Featwatcher
set fmri(featwatcher_yn) 0

<%# Not used in CBRAIN, used in Higher-level analysis %>
# Cleanup first-level standard-space images
set fmri(sscleanup_yn) 0

# Output directory
set fmri(outputdir) "<%= output_path %>"

# TR(s)
set fmri(tr) <%= params[:data][:tr] %>

# Total volumes
set fmri(npts) <%= params[:data][:npts] %>

# Delete volumes
set fmri(ndelete) <%= params[:data][:ndelete] %>

# Perfusion tag/control order
set fmri(tagfirst) <%= params[:pre_stats][:tagfirst] %>

<%# Nb of input file %>
# Number of first-level analyses
set fmri(multiple) 1

<%# Not used now, when hiher level analysis first option in data %>
# Higher-level input type
# 1 : Inputs are lower-level FEAT directories
# 2 : Inputs are cope images from FEAT directories
set fmri(inputtype) 1

# Carry out pre-stats processing?
set fmri(filtering_yn) 1

# Brain/background threshold, %
set fmri(brain_thresh) <%= params[:misc][:brain_thresh] %>

# Critical z for design efficiency calculation
set fmri(critical_z) <%= params[:misc][:critical_z] %>

# Noise level
set fmri(noise) <%= params[:misc][:noise] %>

# Noise AR(1)
set fmri(noisear) <%= params[:misc][:noisear] %>

<%# Not used in CBRAIN, when run only post-stats in misc 4th option %>
# Post-stats-only directory copying
# 0 : Overwrite original post-stats results
# 1 : Copy original FEAT directory for new Contrasts, Thresholding, Rendering
set fmri(newdir_yn) 0

# Motion correction
# 0 : None
# 1 : MCFLIRT
set fmri(mc) <%= params[:pre_stats][:mc] %>

<%# Not used in CBRAIN %>
# Spin-history (currently obsolete)
set fmri(sh_yn) 0

# B0 fieldmap unwarping?
set fmri(regunwarp_yn) <%= params[:pre_stats][:regunwarp_yn] %>

<%# when used BO unwarping %>
# EPI dwell time (ms)
set fmri(dwell) 0.7

<%# when used BO unwarping %>
# EPI TE (ms)
set fmri(te) 35

<%# when used BO unwarping %>
# % Signal loss threshold
set fmri(signallossthresh) 10

<%# when used BO unwarping %>
# Unwarp direction
set fmri(unwarp_dir) y-

# Slice timing correction
# 0 : None
# 1 : Regular up (0, 1, 2, 3, ...)
# 2 : Regular down
# 3 : Use slice order file
# 4 : Use slice timings file
# 5 : Interleaved (0, 2, 4 ... 1, 3, 5 ... )
set fmri(st) <%= params[:pre_stats][:st] %>

<%# Not used in CBRAIN appears when slice timing correction is 'Use slice...'  %>
# Slice timings file
set fmri(st_file) ""

# BET brain extraction
set fmri(bet_yn) <%= params[:pre_stats][:bet_yn] %>

# Spatial smoothing FWHM (mm)
set fmri(smooth) <%= params[:pre_stats][:smooth] %>

# Intensity normalization
set fmri(norm_yn) <%= params[:pre_stats][:norm_yn] %>

# Perfusion subtraction
set fmri(perfsub_yn) <%= params[:pre_stats][:perfsub_yn] %>

# Highpass temporal filtering
set fmri(temphp_yn) <%= params[:pre_stats][:temphp_yn] %>

<%# ??? %>
# Lowpass temporal filtering
set fmri(templp_yn) 0

# MELODIC ICA data exploration
set fmri(melodic_yn) <%= params[:pre_stats][:melodic_yn] %>

<%# Main stats not implemented in CBRAIN %>
# Carry out main stats?
set fmri(stats_yn) 0

# Carry out prewhitening?
set fmri(prewhiten_yn) 1

<%# Not used in CBRAIN %>
# Add motion parameters to model
# 0 : No
# 1 : Yes
set fmri(motionevs) 0

# Robust outlier detection in FLAME?
set fmri(robust_yn) 0

# Higher-level modelling
# 3 : Fixed effects
# 0 : Mixed Effects: Simple OLS
# 2 : Mixed Effects: FLAME 1
# 1 : Mixed Effects: FLAME 1+2
set fmri(mixed_yn) 2

# Number of EVs
set fmri(evs_orig) 1
set fmri(evs_real) 2
set fmri(evs_vox) 0

# Number of contrasts
set fmri(ncon_orig) 1
set fmri(ncon_real) 1

# Number of F-tests
set fmri(nftests_orig) 0
set fmri(nftests_real) 0


# Add constant column to design matrix? (obsolete)
set fmri(constcol) 0

<%# Post-stats not implemented in CBRAIN %>
# Carry out post-stats steps?
set fmri(poststats_yn) 0

# Pre-threshold masking?
set fmri(threshmask) ""

# Thresholding
# 0 : None
# 1 : Uncorrected
# 2 : Voxel
# 3 : Cluster
set fmri(thresh) 3

# P threshold
set fmri(prob_thresh) 0.05

# Z threshold
set fmri(z_thresh) 2.3

# Z min/max for colour rendering
# 0 : Use actual Z min/max
# 1 : Use preset Z min/max
set fmri(zdisplay) 0

# Z min in colour rendering
set fmri(zmin) 2

# Z max in colour rendering
set fmri(zmax) 8

# Colour rendering type
# 0 : Solid blobs
# 1 : Transparent blobs
set fmri(rendertype) 1

# Background image for higher-level stats overlays
# 1 : Mean highres
# 2 : First highres
# 3 : Mean functional
# 4 : First functional
# 5 : Standard space template
set fmri(bgimage) 1

# Create time series plots
set fmri(tsplot_yn) 1
<%# Post-stats not implemented in CBRAIN %>

<%# For the moment, always used in CBRAIN.%>
# Registration?
set fmri(reg_yn) 1

<%# Registration to initial structural not implemented in CBRAIN %>
# Registration to initial structural
set fmri(reginitial_highres_yn) 0

# Search space for registration to initial structural
# 0   : No search
# 90  : Normal search
# 180 : Full search
set fmri(reginitial_highres_search) 90

# Degrees of Freedom for registration to initial structural
set fmri(reginitial_highres_dof) 3
<%# Registration to initial structural not implemented in CBRAIN %>

<%# Registration to main structural not implemented in CBRAIN %>
# Registration to main structural
set fmri(reghighres_yn) 0

# Search space for registration to main structural
# 0   : No search
# 90  : Normal search
# 180 : Full search
set fmri(reghighres_search) 90

# Degrees of Freedom for registration to main structural
set fmri(reghighres_dof) 6
<%# Registration to main structural not implemented in CBRAIN %>

# Registration to standard image?
set fmri(regstandard_yn) 1

<%# Registration to standard image always done in CBRAIN %>
# Standard image
<% 
  fsl_dir = `echo $FSLDIR`
  fsl_dir.strip!  
%>
  set fmri(regstandard) "<%= "#{fsl_dir}/data/standard/MNI152_T1_2mm_brain" %>"

# Search space for registration to standard space
# 0   : No search
# 90  : Normal search
# 180 : Full search
set fmri(regstandard_search) <%= params[:registration][:regstandard_search]%>

# Degrees of Freedom for registration to standard space
set fmri(regstandard_dof) <%= params[:registration][:regstandard_dof]%>
<%# Registration to standard image always done in CBRAIN %>

# Do nonlinear registration from structural to standard space?
set fmri(regstandard_nonlinear_yn) 0

# Control nonlinear warp field resolution
set fmri(regstandard_nonlinear_warpres) 10
<%# Registration to standard image always done in CBRAIN %>

<%# For the moment, always used in CBRAIN.%>

# High pass filter cutoff
set fmri(paradigm_hp) <%= params[:data][:paradigm_hp] %>

<%# In higher level analysis %>
# Number of lower-level copes feeding into higher-level analysis
set fmri(ncopeinputs) 0

# 4D AVW data or FEAT directory (1)
set feat_files(1) "<%= input_path %>"

<%# EV not implemented in CBRAIN %>
# Add confound EVs text file
set fmri(confoundevs) 0

# EV 1 title
set fmri(evtitle1) ""

# Basic waveform shape (EV 1)
# 0 : Square
# 1 : Sinusoid
# 2 : Custom (1 entry per volume)
# 3 : Custom (3 column format)
# 4 : Interaction
# 10 : Empty (all zeros)
set fmri(shape1) 0

# Convolution (EV 1)
# 0 : None
# 1 : Gaussian
# 2 : Gamma
# 3 : Double-Gamma HRF
# 4 : Gamma basis functions
# 5 : Sine basis functions
# 6 : FIR basis functions
set fmri(convolve1) 2

# Convolve phase (EV 1)
set fmri(convolve_phase1) 0

# Apply temporal filtering (EV 1)
set fmri(tempfilt_yn1) 1

# Add temporal derivative (EV 1)
set fmri(deriv_yn1) 1

# Skip (EV 1)
set fmri(skip1) 0

# Off (EV 1)
set fmri(off1) 30

# On (EV 1)
set fmri(on1) 30

# Phase (EV 1)
set fmri(phase1) 0

# Stop (EV 1)
set fmri(stop1) -1

# Gamma sigma (EV 1)
set fmri(gammasigma1) 3

# Gamma delay (EV 1)
set fmri(gammadelay1) 6

# Orthogonalise EV 1 wrt EV 0
set fmri(ortho1.0) 0

# Orthogonalise EV 1 wrt EV 1
set fmri(ortho1.1) 0
<%# EV not implemented in CBRAIN %>

<%# When run lineal model %>
# Contrast & F-tests mode
# real : control real EVs
# orig : control original EVs
set fmri(con_mode_old) orig
set fmri(con_mode) orig

# Display images for contrast_real 1
set fmri(conpic_real.1) 1

# Title for contrast_real 1
set fmri(conname_real.1) ""

# Real contrast_real vector 1 element 1
set fmri(con_real1.1) 1

# Real contrast_real vector 1 element 2
set fmri(con_real1.2) 0

# Display images for contrast_orig 1
set fmri(conpic_orig.1) 1

# Title for contrast_orig 1
set fmri(conname_orig.1) ""

# Real contrast_orig vector 1 element 1
set fmri(con_orig1.1) 1

# Contrast masking - use >0 instead of thresholding?
set fmri(conmask_zerothresh_yn) 0

# Do contrast masking at all?
set fmri(conmask1_1) 0
<%# When run lineal model %>

##########################################################
<%# Following options are not used in CBRAIN %> 
# Now options that don't appear in the GUI

# Alternative example_func image (not derived from input 4D dataset)
set fmri(alternative_example_func) ""

# Alternative (to BETting) mask image
set fmri(alternative_mask) ""

# Initial structural space registration initialisation transform
set fmri(init_initial_highres) ""

# Structural space registration initialisation transform
set fmri(init_highres) ""

# Standard space registration initialisation transform
set fmri(init_standard) ""

# For full FEAT analysis: overwrite existing .feat output dir?
set fmri(overwrite_yn) 0
